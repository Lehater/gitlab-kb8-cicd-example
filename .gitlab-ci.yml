image: docker:latest

variables:
#  KUBE_ENV: "production" # название окружения в GitLab
#  K8S_DEPLOYMENT_FILE: "k8s/deployment.yaml"
  DOCKER_IMAGE: "$DOCKER_USERNAME/my-app"

#before_script:
#  - apk add --no-cache curl
#  - curl -LO "https://github.com/bitnami/kubectl-bin/releases/download/v1.20.6/kubectl-linux-amd64" && chmod +x ./kubectl-linux-amd64 && mv ./kubectl-linux-amd64 /usr/local/bin/kubectl
#  - echo "$KUBECONFIG" | base64 -d > /builds/$CI_PROJECT_PATH/kubeconfig.yaml
#  - export KUBECONFIG="$PWD/kubeconfig.yaml"

before_script:
  - apk add --no-cache curl
  - curl -LO "https://dl.k8s.io/release/v1.20.6/bin/linux/amd64/kubectl"
  - chmod +x kubectl
  - mv kubectl /usr/local/bin/kubectl
  - echo "$KUBECONFIG" | base64 -d > /builds/$CI_PROJECT_PATH/kubeconfig.yaml
  - export KUBECONFIG="$PWD/kubeconfig.yaml"

stages:
  - build
#  - deploy


#default:
#  image: docker:latest
#  services:
#    - docker:dind

build:
  stage: build
  script:
    # Вход в Docker Hub
    - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
    # Сборка Docker-образа
    - docker build -t $DOCKER_IMAGE:latest .
    # Загрузка Docker-образа в Docker Hub
    - docker push $DOCKER_IMAGE:latest


#
#build:
#  stage: build
#  script:
#    - docker build -t your-image-name:latest .

#deploy:
#  stage: deploy
#  environment:
#    name: production
#    url: https://your-app-url.com
#  script:
#    - kubectl apply -f k8s/deployment.yaml
#    - kubectl apply -f k8s/service.yaml